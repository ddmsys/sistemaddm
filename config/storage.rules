rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // ========== HELPER FUNCTIONS ==========
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && 
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function hasAnyRole(roles) {
      return isAuthenticated() && 
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in roles;
    }
    
    function isActive() {
      return isAuthenticated() && 
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isActive == true;
    }
    
    function isValidImageType() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isValidDocumentType() {
      return request.resource.contentType in [
        'application/pdf',
        'application/msword',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'application/vnd.ms-excel',
        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
      ];
    }
    
    function isValidFileSize(maxSizeMB) {
      return request.resource.size <= maxSizeMB * 1024 * 1024;
    }
    
    // ========== PROFILE IMAGES ==========
    
    match /profiles/{userId}/avatar {
      allow read: if isAuthenticated();
      
      allow write: if isAuthenticated() && 
        (isOwner(userId) || hasRole('admin')) &&
        isValidImageType() &&
        isValidFileSize(5); // 5MB max
    }
    
    // ========== CLIENT FILES ==========
    
    match /clients/{clientId}/{allPaths=**} {
      allow read: if isActive() && hasAnyRole(['admin', 'comercial', 'financeiro']);
      
      allow write: if isActive() && 
        hasAnyRole(['admin', 'comercial']) &&
        (isValidDocumentType() || isValidImageType()) &&
        isValidFileSize(10); // 10MB max
    }
    
    // ========== PROJECT FILES ==========
    
    match /projects/{projectId}/{category}/{fileName} {
      allow read: if isActive() && (
        hasAnyRole(['admin', 'comercial', 'producao', 'financeiro']) ||
        // Verificar se usuário é membro do projeto
        firestore.get(/databases/(default)/documents/projects/$(projectId)).data.teamMembers.hasAny([request.auth.uid]) ||
        firestore.get(/databases/(default)/documents/projects/$(projectId)).data.projectManager == request.auth.uid
      );
      
      allow write: if isActive() && 
        category in ['brief', 'proof', 'final', 'reference', 'other'] &&
        (
          hasAnyRole(['admin', 'comercial', 'producao']) ||
          firestore.get(/databases/(default)/documents/projects/$(projectId)).data.teamMembers.hasAny([request.auth.uid]) ||
          firestore.get(/databases/(default)/documents/projects/$(projectId)).data.projectManager == request.auth.uid
        ) &&
        (isValidDocumentType() || isValidImageType()) &&
        isValidFileSize(50); // 50MB max para arquivos de projeto
    }
    
    // ========== QUOTE FILES ==========
    
    match /quotes/{quoteId}/pdf/{fileName} {
      allow read: if isActive() && hasAnyRole(['admin', 'comercial', 'financeiro']);
      
      allow write: if isActive() && 
        hasAnyRole(['admin', 'comercial']) &&
        request.resource.contentType == 'application/pdf' &&
        isValidFileSize(10); // 10MB max
    }
    
    // ========== INVOICE FILES ==========
    
    match /invoices/{invoiceId}/pdf/{fileName} {
      allow read: if isActive() && hasAnyRole(['admin', 'comercial', 'financeiro']);
      
      allow write: if isActive() && 
        hasAnyRole(['admin', 'financeiro']) &&
        request.resource.contentType == 'application/pdf' &&
        isValidFileSize(10); // 10MB max
    }
    
    // ========== MARKETING ASSETS ==========
    
    match /marketing/campaigns/{campaignId}/{assetType}/{fileName} {
      allow read: if isActive() && hasAnyRole(['admin', 'marketing', 'comercial']);
      
      allow write: if isActive() && 
        hasAnyRole(['admin', 'marketing']) &&
        assetType in ['images', 'videos', 'documents'] &&
        (
          (assetType == 'images' && isValidImageType()) ||
          (assetType == 'videos' && request.resource.contentType.matches('video/.*')) ||
          (assetType == 'documents' && isValidDocumentType())
        ) &&
        (
          (assetType == 'images' && isValidFileSize(10)) ||
          (assetType == 'videos' && isValidFileSize(100)) ||
          (assetType == 'documents' && isValidFileSize(20))
        );
    }
    
    // ========== CREATIVE ASSETS ==========
    
    match /marketing/creatives/{creativeId}/{fileName} {
      allow read: if isActive() && hasAnyRole(['admin', 'marketing', 'comercial']);
      
      allow write: if isActive() && 
        hasAnyRole(['admin', 'marketing']) &&
        (isValidImageType() || request.resource.contentType.matches('video/.*')) &&
        isValidFileSize(50); // 50MB max
    }
    
    // ========== SUPPLIER DOCUMENTS ==========
    
    match /suppliers/{supplierId}/documents/{fileName} {
      allow read: if isActive() && hasAnyRole(['admin', 'compras', 'producao']);
      
      allow write: if isActive() && 
        hasAnyRole(['admin', 'compras']) &&
        isValidDocumentType() &&
        isValidFileSize(20); // 20MB max
    }
    
    // ========== PURCHASE ORDERS ==========
    
    match /purchaseOrders/{orderId}/documents/{fileName} {
      allow read: if isActive() && hasAnyRole(['admin', 'compras', 'financeiro']);
      
      allow write: if isActive() && 
        hasAnyRole(['admin', 'compras']) &&
        isValidDocumentType() &&
        isValidFileSize(10); // 10MB max
    }
    
    // ========== TEMP UPLOADS ==========
    
    match /temp/{userId}/{fileName} {
      allow read, write: if isAuthenticated() && 
        isOwner(userId) &&
        isValidFileSize(100); // 100MB max para uploads temporários
    }
    
    // ========== SYSTEM BACKUPS ==========
    
    match /system/backups/{fileName} {
      allow read, write: if hasRole('admin');
    }
  }
}
